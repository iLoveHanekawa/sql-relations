// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//one-to-one

model User {
  id      Int      @id @default(autoincrement())
  profile Profile? // has to be optional 
}

model Profile {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id]) //these can be optional 
  userId Int  @unique
}

//one-to-many

model Author {
  id    Int    @id @default(autoincrement())
  posts Post[] // has to be required
}

model Post {
  id       Int    @id @default(autoincrement())
  author   Author @relation(fields: [authorId], references: [id]) //either both optional or both required
  authorId Int
}

//explicit many to many

model Employee {
  id       Int                  @id @default(autoincrement())
  name     String
  projects ProjectsOnEmployee[]
}

model Project {
  id        Int                  @id @default(autoincrement())
  name      String
  employees ProjectsOnEmployee[]
}

model ProjectsOnEmployee {
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
  project    Project  @relation(fields: [projectId], references: [id])
  projectId  Int

  @@id([employeeId, projectId])
}

//implicit many to many

model Movie {
  id     Int     @id @default(autoincrement())
  name   String
  actors Actor[]
}

model Actor {
  id     Int     @id @default(autoincrement())
  name   String
  movies Movie[]
}

// self one to one

model Node {
  id       Int   @id @default(autoincrement())
  data     Int
  parent   Node?  @relation("Link", fields: [parentId], references: [id])
  parentId Int?   @unique
  child    Node? @relation("Link")
}
